/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package co.ntbl.podcastfeedhandler;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.nio.charset.StandardCharsets;

class PodcastTest {
    @Test void getAllEpisodesTestTal() {
        Podcast podcast = stringXmlToPodcastObject("tal.xml");
        Assertions.assertNotEquals(podcast.getEpisodeList().size(), 0);
    }

    @Test public String getRawStringFromAssets(String filename) {
        InputStream is = getClass().getClassLoader().getResourceAsStream(filename);
        byte[] documentAsBytes;
        try {
            documentAsBytes = is.readAllBytes();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return new String(documentAsBytes, StandardCharsets.UTF_8);
    }

    @Test Podcast stringXmlToPodcastObject(String podcastFeed) {
        String doc = getRawStringFromAssets(podcastFeed);
        PodcastFeedHandler classUnderTest = new PodcastFeedHandler();
        Podcast fromDoc;
        try {
            fromDoc = classUnderTest.getPodcastFromDocument(doc);
        } catch (MalformedURLException | PodcastFeedException e) {
            throw new RuntimeException(e);
        }
        return fromDoc;
    }

    @Test void getAllEpisodesTestPm() {
        String doc = getRawStringFromAssets("planetmoney.xml");
        PodcastFeedHandler classUnderTest = new PodcastFeedHandler();
        try {
            Podcast fromDoc = classUnderTest.getPodcastFromDocument(doc);
            Assertions.assertNotEquals(fromDoc.getEpisodeList().size(), 0);
        } catch (MalformedURLException | PodcastFeedException e) {
            throw new RuntimeException(e);
        }
    }
}
