/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package co.ntbl.podcastfeedhandler;

import co.ntbl.podcastfeedhandler.Episode;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;

class PodcastTest {
    @Test void getAllEpisodesTestTal() {
        InputStream is = getClass().getClassLoader().getResourceAsStream("tal.xml");
        byte[] documentAsBytes;
        try {
            documentAsBytes = is.readAllBytes();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        PodcastFeedHandler classUnderTest = new PodcastFeedHandler();
        Podcast fromDoc;
        try {
            fromDoc = classUnderTest.getPodcastFromDocument(new String(documentAsBytes));
        } catch (MalformedURLException e) {
            throw new RuntimeException(e);
        } catch (PodcastFeedException e) {
            throw new RuntimeException(e);
        }
        Assertions.assertNotEquals(fromDoc.getEpisodeList().size(), 0);
    }

    @Test void getAllEpisodesTestPm() {
        InputStream is = getClass().getClassLoader().getResourceAsStream("planetmoney.xml");
        byte[] documentAsBytes;
        try {
            documentAsBytes = is.readAllBytes();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        PodcastFeedHandler classUnderTest = new PodcastFeedHandler();
        try {
            Podcast fromDoc = classUnderTest.getPodcastFromDocument(new String(documentAsBytes));
        } catch (MalformedURLException | PodcastFeedException e) {
            throw new RuntimeException(e);
        }
        Assertions.assertTrue(true);
    }
}
